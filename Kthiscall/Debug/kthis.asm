; Listing generated by Microsoft (R) Optimizing Compiler Version 19.21.27702.2 

	TITLE	D:\Class\6.0\TTmp\Kthiscall\kthis.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__9806296A_kthis@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?Func1@A@@QAAHHHHZZ				; A::Func1
PUBLIC	?Func3@A@@QAAHHHHZZ				; A::Func3
PUBLIC	?Func4@A@@QAIHHHH@Z				; A::Func4
PUBLIC	?Func4x@A@@QAIHHHHHHH@Z				; A::Func4x
PUBLIC	?Func5@A@@QAEHHHH@Z				; A::Func5
PUBLIC	?Func6@A@@QAQHHHH@Z				; A::Func6
PUBLIC	??0A@@QAE@XZ					; A::A
PUBLIC	??1A@@QAE@XZ					; A::~A
PUBLIC	_main
PUBLIC	__JustMyCode_Default
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$0
__ehfuncinfo$_main DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$_main
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1A@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _main
_TEXT	SEGMENT
_a$ = -21						; size = 1
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_main	PROC						; COMDAT
; File D:\Class\6.0\TTmp\Kthiscall\kthis.cpp
; Line 41
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_main
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __9806296A_kthis@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 42
	lea	ecx, DWORD PTR _a$[ebp]
	call	??0A@@QAE@XZ				; A::A
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 44
	push	4
	push	3
	push	2
	push	1
	lea	eax, DWORD PTR _a$[ebp]
	push	eax
	call	?Func1@A@@QAAHHHHZZ			; A::Func1
	add	esp, 20					; 00000014H
; Line 45
	push	4
	push	3
	push	2
	push	1
	lea	eax, DWORD PTR _a$[ebp]
	push	eax
	call	?Func3@A@@QAAHHHHZZ			; A::Func3
	add	esp, 20					; 00000014H
; Line 46
	push	3
	push	2
	mov	edx, 1
	lea	ecx, DWORD PTR _a$[ebp]
	call	?Func4@A@@QAIHHHH@Z			; A::Func4
; Line 47
	push	6
	push	5
	push	4
	push	3
	push	2
	mov	edx, 1
	lea	ecx, DWORD PTR _a$[ebp]
	call	?Func4x@A@@QAIHHHHHHH@Z			; A::Func4x
; Line 48
	push	3
	push	2
	push	1
	lea	ecx, DWORD PTR _a$[ebp]
	call	?Func5@A@@QAEHHHH@Z			; A::Func5
; Line 49
	push	3
	push	2
	mov	edx, 1
	lea	ecx, DWORD PTR _a$[ebp]
	call	?Func6@A@@QAQHHHH@Z			; A::Func6
; Line 50
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _a$[ebp]
	call	??1A@@QAE@XZ				; A::~A
	xor	eax, eax
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@main:
	DD	1
	DD	$LN6@main
$LN6@main:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN4@main
$LN4@main:
	DB	97					; 00000061H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_main$0:
	lea	ecx, DWORD PTR _a$[ebp]
	jmp	??1A@@QAE@XZ				; A::~A
__ehhandler$_main:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_main
	jmp	___CxxFrameHandler3
text$x	ENDS
_main	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1A@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1A@@QAE@XZ PROC					; A::~A, COMDAT
; _this$ = ecx
; File D:\Class\6.0\TTmp\Kthiscall\kthis.cpp
; Line 37
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1A@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9806296A_kthis@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1A@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1A@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1A@@QAE@XZ ENDP					; A::~A
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0A@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0A@@QAE@XZ PROC					; A::A, COMDAT
; _this$ = ecx
; File D:\Class\6.0\TTmp\Kthiscall\kthis.cpp
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9806296A_kthis@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0A@@QAE@XZ ENDP					; A::A
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Func6@A@@QAQHHHH@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__x$ = -8						; size = 4
__y$ = 8						; size = 4
__z$ = 12						; size = 4
?Func6@A@@QAQHHHH@Z PROC				; A::Func6, COMDAT
; _this$ = ecx
; __x$ = edx
; File D:\Class\6.0\TTmp\Kthiscall\kthis.cpp
; Line 31
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR __x$[ebp], edx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9806296A_kthis@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 32
	mov	eax, DWORD PTR __x$[ebp]
	add	eax, DWORD PTR __y$[ebp]
	add	eax, DWORD PTR __z$[ebp]
; Line 33
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Func6@A@@QAQHHHH@Z ENDP				; A::Func6
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Func5@A@@QAEHHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
?Func5@A@@QAEHHHH@Z PROC				; A::Func5, COMDAT
; _this$ = ecx
; File D:\Class\6.0\TTmp\Kthiscall\kthis.cpp
; Line 27
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9806296A_kthis@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 28
	mov	eax, DWORD PTR __x$[ebp]
	add	eax, DWORD PTR __y$[ebp]
	add	eax, DWORD PTR __z$[ebp]
; Line 29
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Func5@A@@QAEHHHH@Z ENDP				; A::Func5
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Func4x@A@@QAIHHHHHHH@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__x$ = -8						; size = 4
__y$ = 8						; size = 4
__z$ = 12						; size = 4
__w$ = 16						; size = 4
__k$ = 20						; size = 4
__l$ = 24						; size = 4
?Func4x@A@@QAIHHHHHHH@Z PROC				; A::Func4x, COMDAT
; _this$ = ecx
; __x$ = edx
; File D:\Class\6.0\TTmp\Kthiscall\kthis.cpp
; Line 23
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR __x$[ebp], edx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9806296A_kthis@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 24
	mov	eax, DWORD PTR __x$[ebp]
	add	eax, DWORD PTR __y$[ebp]
	add	eax, DWORD PTR __z$[ebp]
	add	eax, DWORD PTR __w$[ebp]
	add	eax, DWORD PTR __k$[ebp]
	add	eax, DWORD PTR __l$[ebp]
; Line 25
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?Func4x@A@@QAIHHHHHHH@Z ENDP				; A::Func4x
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Func4@A@@QAIHHHH@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__x$ = -8						; size = 4
__y$ = 8						; size = 4
__z$ = 12						; size = 4
?Func4@A@@QAIHHHH@Z PROC				; A::Func4, COMDAT
; _this$ = ecx
; __x$ = edx
; File D:\Class\6.0\TTmp\Kthiscall\kthis.cpp
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR __x$[ebp], edx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9806296A_kthis@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 20
	mov	eax, DWORD PTR __x$[ebp]
	add	eax, DWORD PTR __y$[ebp]
	add	eax, DWORD PTR __z$[ebp]
; Line 21
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Func4@A@@QAIHHHH@Z ENDP				; A::Func4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Func3@A@@QAAHHHHZZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
__x$ = 12						; size = 4
__y$ = 16						; size = 4
__z$ = 20						; size = 4
?Func3@A@@QAAHHHHZZ PROC				; A::Func3, COMDAT
; File D:\Class\6.0\TTmp\Kthiscall\kthis.cpp
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __9806296A_kthis@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 16
	mov	eax, DWORD PTR __x$[ebp]
	add	eax, DWORD PTR __y$[ebp]
	add	eax, DWORD PTR __z$[ebp]
; Line 17
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Func3@A@@QAAHHHHZZ ENDP				; A::Func3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Func1@A@@QAAHHHHZZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
__x$ = 12						; size = 4
__y$ = 16						; size = 4
__z$ = 20						; size = 4
?Func1@A@@QAAHHHHZZ PROC				; A::Func1, COMDAT
; File D:\Class\6.0\TTmp\Kthiscall\kthis.cpp
; Line 7
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __9806296A_kthis@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 8
	mov	eax, DWORD PTR __x$[ebp]
	add	eax, DWORD PTR __y$[ebp]
	add	eax, DWORD PTR __z$[ebp]
; Line 9
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Func1@A@@QAAHHHHZZ ENDP				; A::Func1
_TEXT	ENDS
END
